# ~/eks-cluster/docker-compose.yml
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"

  order-service:
    build: ./order-service
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AWS_REGION=ap-northeast-2
      - ORDER_TABLE_NAME=orders
      - KAFKA_BROKERS=kafka:29092
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - LOG_LEVEL=info
      - TLS_ENABLED=false
    depends_on:
      - kafka
      - dynamodb-local
    networks:
      - app-network

  product-service:
    build: ./product-service
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - AWS_REGION=ap-northeast-2
      - PRODUCT_TABLE_NAME=products
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_ENABLED=true
      - KAFKA_GROUP_ID=product-service
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - LOG_LEVEL=info
      - TLS_ENABLED=false
    depends_on:
      - kafka
      - dynamodb-local
    networks:
      - app-network

networks:
  app-network:
    driver: bridge