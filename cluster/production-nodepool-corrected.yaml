apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: production-pool
spec:
  # 노드 템플릿
  template:
    metadata:
      labels:
        # karpenter.sh/nodepool 제거 - 자동 생성됨
        node-type: production
        team: production
        purpose: sale-traffic
      annotations:
        node.kubernetes.io/purpose: production-workload
    spec:
      # 노드 요구사항 - ARM64 t4g 인스턴스
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values:
          - spot        # Spot 우선
          - on-demand   # 필요시 On-Demand
        - key: eks.amazonaws.com/instance-category
          operator: In
          values:
          - t     # T4g 시리즈
          - c     # C6g 시리즈
          - m     # M6g 시리즈
        - key: eks.amazonaws.com/instance-generation
          operator: Gt
          values:
          - "3"
        - key: kubernetes.io/arch
          operator: In
          values:
          - arm64  # ARM64 아키텍처
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
      
      # NodeClass 참조 (기존 default 사용)
      nodeClassRef:
        group: eks.amazonaws.com
        kind: NodeClass
        name: default
      
      # Taints 없음 - 일반 워크로드 스케줄링 가능
      taints: []
      
      # 노드 만료 시간
      expireAfter: 30m
      
      # 터미네이션 유예 기간
      terminationGracePeriod: 2m
  
  # 스케일링 제한
  limits:
    cpu: "1000"
    memory: "4000Gi"
  
  # Disruption 설정
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 30s
    budgets:
    - nodes: "10%"