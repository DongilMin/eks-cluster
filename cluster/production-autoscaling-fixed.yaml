# ============================================
# 1. HPA 설정 - CPU 80% 기준
# ============================================

# Product Service HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: product-service-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: product-service
  minReplicas: 2
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 10
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Min

---
# Order Service HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: order-service-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: order-service
  minReplicas: 2
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 10
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Min

---
# ============================================
# 2. 프로덕션 전용 Karpenter NodePool
# ============================================

apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: production-pool
spec:
  # 노드 템플릿
  template:
    metadata:
      labels:
        karpenter.sh/nodepool: production
        node-type: production
        team: production
      annotations:
        node.kubernetes.io/purpose: production-workload
    spec:
      # 노드 요구사항 - ARM64 t4g 인스턴스
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values:
          - spot        # Spot 우선
          - on-demand   # 필요시 On-Demand
        - key: eks.amazonaws.com/instance-category
          operator: In
          values:
          - t     # T4g 시리즈
          - c     # C6g 시리즈
          - m     # M6g 시리즈
        - key: eks.amazonaws.com/instance-generation
          operator: Gt
          values:
          - "3"
        - key: node.kubernetes.io/instance-type
          operator: In
          values:
          # T4g 시리즈 (비용 효율적)
          - t4g.medium
          - t4g.large
          - t4g.xlarge
          - t4g.2xlarge
          # C6g 시리즈 (CPU 집약적)
          - c6g.large
          - c6g.xlarge
          - c6g.2xlarge
          # M6g 시리즈 (균형)
          - m6g.large
          - m6g.xlarge
        - key: kubernetes.io/arch
          operator: In
          values:
          - arm64  # ARM64 아키텍처
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
      
      # NodeClass 참조 (기존 default 사용)
      nodeClassRef:
        group: eks.amazonaws.com
        kind: NodeClass
        name: default
      
      # Taints 없음
      taints: []
      
      # 노드 만료 시간 (spec.template.spec에 위치)
      expireAfter: 30m
      
      # 터미네이션 유예 기간
      terminationGracePeriod: 2m
  
  # 스케일링 제한
  limits:
    cpu: "1000"
    memory: "4000Gi"
  
  # Disruption 설정 (expireAfter 제거)
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 30s
    budgets:
    - nodes: "10%"