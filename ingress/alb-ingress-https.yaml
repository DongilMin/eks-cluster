apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: msa-ingress
  namespace: production
  labels:
    app: msa
    environment: production
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # HTTPS 설정
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    # 자체 서명 인증서 사용 (도메인 없이)
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:928475935003:certificate/5ca8b30e-42a0-4384-98c9-9c545b48344e"
    # 백엔드 프로토콜
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    # 헬스체크
    alb.ingress.kubernetes.io/healthcheck-path: /api/v1/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    # 로드밸런서 속성
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=eks-alb-logs-928475935003,
      access_logs.s3.prefix=production
    # 타겟 그룹 속성
    alb.ingress.kubernetes.io/target-group-attributes: |
      deregistration_delay.timeout_seconds=30,
      stickiness.enabled=true,
      stickiness.type=app_cookie,
      stickiness.app_cookie.cookie_name=MSASESSION,
      stickiness.app_cookie.duration_seconds=86400
    # 보안 그룹과 서브넷
    alb.ingress.kubernetes.io/security-groups: sg-04910c18bd8f8500a,sg-0d6f1037ede9e7a25
    alb.ingress.kubernetes.io/subnets: subnet-00a1df66e269743b3,subnet-057b1399a4c256f74
    # 태그
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Team=platform,
      Application=msa
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      # Product Service 라우팅 (와일드카드 제거)
      - path: /api/v1/products
        pathType: Prefix
        backend:
          service:
            name: product-service
            port:
              number: 80
      # Order Service 라우팅
      - path: /api/v1/orders
        pathType: Prefix
        backend:
          service:
            name: order-service
            port:
              number: 80
      # Health Check
      - path: /api/v1/health
        pathType: Exact
        backend:
          service:
            name: product-service
            port:
              number: 80